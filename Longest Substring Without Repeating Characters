class code {
public:
    int lengthOfLongestSubstring(string s) {
        int wind_start=0;
        int max_len=INT_MIN;
        map<char,int> mp;
        if(s.size()==0) return 0;
        for(int wind_end=0;wind_end<s.size();wind_end++){
              char c=s[wind_end];
              if(mp.find(c)!=mp.end()){
                  wind_start=max(wind_start,mp[c]+1);

              }
            mp[c]=wind_end;
            max_len=max(max_len,wind_end-wind_start+1);
      }
        return max_len;
        
    }
};
int main(){
          string s = "abcabcbb";
          code c;
          cout<<"Maximum length of longest substring without repeating character is "<<c.lengthOfLongestSubstring(s)<<endl;
}
